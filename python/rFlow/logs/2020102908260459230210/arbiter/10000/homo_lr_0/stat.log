[DEBUG] [2020-10-29 08:26:09,001] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=HasConvergedTransVar.has_converged, src=('arbiter',), dst=('guest', 'host')
[DEBUG] [2020-10-29 08:26:09,002] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=LossScatterTransVar.loss, src=('guest', 'host'), dst=('arbiter',)
[DEBUG] [2020-10-29 08:26:09,003] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=ModelScatterTransVar.client_model, src=('guest', 'host'), dst=('arbiter',)
[DEBUG] [2020-10-29 08:26:09,003] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=ModelBroadcasterTransVar.server_model, src=('arbiter',), dst=('guest', 'host')
[DEBUG] [2020-10-29 08:26:09,005] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=UUIDTransVar.uuid, src=('arbiter',), dst=('guest', 'host')
[DEBUG] [2020-10-29 08:26:09,841] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=DHTransVar.p_power_r, src=('guest', 'host'), dst=('arbiter',)
[DEBUG] [2020-10-29 08:26:09,841] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=DHTransVar.p_power_r_bc, src=('arbiter',), dst=('guest', 'host')
[DEBUG] [2020-10-29 08:26:09,841] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=DHTransVar.pubkey, src=('arbiter',), dst=('guest', 'host')
[DEBUG] [2020-10-29 08:26:10,101] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=RandomPaddingCipherTransVar.UUIDTransVar.uuid, src=('arbiter',), dst=('guest', 'host')
[DEBUG] [2020-10-29 08:26:10,101] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=RandomPaddingCipherTransVar.DHTransVar.p_power_r, src=('guest', 'host'), dst=('arbiter',)
[DEBUG] [2020-10-29 08:26:10,101] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=RandomPaddingCipherTransVar.DHTransVar.p_power_r_bc, src=('arbiter',), dst=('guest', 'host')
[DEBUG] [2020-10-29 08:26:10,102] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=RandomPaddingCipherTransVar.DHTransVar.pubkey, src=('arbiter',), dst=('guest', 'host')
[DEBUG] [2020-10-29 08:26:10,357] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=LegacyAggregatorTransVar.LossScatterTransVar.loss, src=('guest', 'host'), dst=('arbiter',)
[DEBUG] [2020-10-29 08:26:10,357] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=LegacyAggregatorTransVar.HasConvergedTransVar.has_converged, src=('arbiter',), dst=('guest', 'host')
[DEBUG] [2020-10-29 08:26:10,358] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=LegacyAggregatorTransVar.ModelScatterTransVar.client_model, src=('guest', 'host'), dst=('arbiter',)
[DEBUG] [2020-10-29 08:26:10,358] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=LegacyAggregatorTransVar.ModelBroadcasterTransVar.server_model, src=('arbiter',), dst=('guest', 'host')
[DEBUG] [2020-10-29 08:26:10,358] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=LegacyAggregatorTransVar.RandomPaddingCipherTransVar.UUIDTransVar.uuid, src=('arbiter',), dst=('guest', 'host')
[DEBUG] [2020-10-29 08:26:10,358] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=LegacyAggregatorTransVar.RandomPaddingCipherTransVar.DHTransVar.p_power_r, src=('guest', 'host'), dst=('arbiter',)
[DEBUG] [2020-10-29 08:26:10,358] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=LegacyAggregatorTransVar.RandomPaddingCipherTransVar.DHTransVar.p_power_r_bc, src=('arbiter',), dst=('guest', 'host')
[DEBUG] [2020-10-29 08:26:10,358] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=LegacyAggregatorTransVar.RandomPaddingCipherTransVar.DHTransVar.pubkey, src=('arbiter',), dst=('guest', 'host')
[DEBUG] [2020-10-29 08:26:10,530] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=PaillierCipherTransVar.use_encrypt, src=('host',), dst=('arbiter',)
[DEBUG] [2020-10-29 08:26:10,530] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=PaillierCipherTransVar.pailler_pubkey, src=('arbiter',), dst=('host',)
[DEBUG] [2020-10-29 08:26:10,530] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=PaillierCipherTransVar.re_encrypt_times, src=('host',), dst=('arbiter',)
[DEBUG] [2020-10-29 08:26:10,531] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=PaillierCipherTransVar.model_to_re_encrypt, src=('host',), dst=('arbiter',)
[DEBUG] [2020-10-29 08:26:10,531] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=PaillierCipherTransVar.model_re_encrypted, src=('arbiter',), dst=('host',)
[DEBUG] [2020-10-29 08:26:24,429] [2815:140414991583040] - encrypt_param.py[line:71]: Finish encrypt parameter check!
[DEBUG] [2020-10-29 08:26:24,429] [2815:140414991583040] - predict_param.py[line:46]: Finish predict parameter check!
[DEBUG] [2020-10-29 08:26:24,429] [2815:140414991583040] - component_properties.py[line:67]: {'HomoLogisticParam': {'penalty': 'L2', 'tol': 1e-05, 'alpha': 0.01, 'optimizer': 'sgd', 'batch_size': 320, 'learning_rate': 0.15, 'init_param': {'init_method': 'zeros', 'init_const': 1, 'fit_intercept': True, 'random_seed': None}, 'max_iter': 3, 'early_stop': 'diff', 'encrypt_param': {'method': 'Paillier', 'key_length': 1024}, 'predict_param': {'threshold': 0.5}, 'cv_param': {'n_splits': 4, 'mode': 'hetero', 'role': 'guest', 'shuffle': True, 'random_seed': 33, 'need_cv': False}, 'decay': 1, 'decay_sqrt': True, 'multi_class': 'ovr', 'validation_freqs': None, 'stepwise_param': {'score_name': 'AIC', 'mode': 'hetero', 'role': 'guest', 'direction': 'both', 'max_step': 10, 'nvmin': 2, 'nvmax': None, 'need_stepwise': False}, 'early_stopping_rounds': None, 'metrics': ['auc', 'ks'], 'use_first_metric_only': False, 're_encrypt_batches': 2, 'aggregate_iters': 1}, 'initiator': {'role': 'guest', 'party_id': 10000}, 'job_parameters': {'work_mode': 0, 'model_id': 'arbiter-10000#guest-10000#host-10000#model', 'model_version': '202010290812019279649'}, 'role': {'guest': [10000], 'host': [10000], 'arbiter': [10000]}, 'config': '/fate/examples/federatedml-1.x-examples/homo_logistic_regression/test_homolr_evaluate_job_conf.json', 'dsl': 'examples/federatedml-1.x-examples/homo_logistic_regression/test_homolr_evaluate_job_dsl.json', 'function': 'submit_job', 'local': {'role': 'arbiter', 'party_id': 10000}, 'CodePath': 'federatedml/linear_model/logistic_regression/homo_logsitic_regression/homo_lr_arbiter.py/HomoLRArbiter', 'module': 'HomoLR'}
[DEBUG] [2020-10-29 08:26:24,429] [2815:140414991583040] - component_properties.py[line:74]: need_run: True, need_cv: False
[DEBUG] [2020-10-29 08:26:24,429] [2815:140414991583040] - optimizer.py[line:273]: in optimizer_factory, optimizer_type: sgd, learning_rate: 0.15, alpha: 0.01, penalty: L2,decay: 1, decay_sqrt: True
[INFO] [2020-10-29 08:26:24,430] [2815:140414991583040] - one_vs_rest.py[line:287]: Create one_vs_rest object, role: arbiter, mode: homo
[DEBUG] [2020-10-29 08:26:24,430] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=OneVsRestTransferVariable.aggregate_classes, src=('guest',), dst=('host', 'arbiter')
[DEBUG] [2020-10-29 08:26:24,430] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=OneVsRestTransferVariable.host_classes, src=('host',), dst=('guest',)
[DEBUG] [2020-10-29 08:26:24,430] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=HomoLRTransferVariable.aggregated_model, src=('arbiter',), dst=('guest', 'host')
[DEBUG] [2020-10-29 08:26:24,431] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=HomoLRTransferVariable.dh_ciphertext_bc, src=('arbiter',), dst=('guest', 'host')
[DEBUG] [2020-10-29 08:26:24,431] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=HomoLRTransferVariable.dh_ciphertext_guest, src=('guest',), dst=('arbiter',)
[DEBUG] [2020-10-29 08:26:24,431] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=HomoLRTransferVariable.dh_ciphertext_host, src=('host',), dst=('arbiter',)
[DEBUG] [2020-10-29 08:26:24,431] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=HomoLRTransferVariable.dh_pubkey, src=('arbiter',), dst=('guest', 'host')
[DEBUG] [2020-10-29 08:26:24,431] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=HomoLRTransferVariable.guest_loss, src=('guest',), dst=('arbiter',)
[DEBUG] [2020-10-29 08:26:24,431] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=HomoLRTransferVariable.guest_model, src=('guest',), dst=('arbiter',)
[DEBUG] [2020-10-29 08:26:24,432] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=HomoLRTransferVariable.guest_party_weight, src=('guest',), dst=('arbiter',)
[DEBUG] [2020-10-29 08:26:24,432] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=HomoLRTransferVariable.guest_uuid, src=('guest',), dst=('arbiter',)
[DEBUG] [2020-10-29 08:26:24,432] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=HomoLRTransferVariable.host_loss, src=('host',), dst=('arbiter',)
[DEBUG] [2020-10-29 08:26:24,432] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=HomoLRTransferVariable.host_model, src=('host',), dst=('arbiter',)
[DEBUG] [2020-10-29 08:26:24,432] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=HomoLRTransferVariable.host_party_weight, src=('host',), dst=('arbiter',)
[DEBUG] [2020-10-29 08:26:24,432] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=HomoLRTransferVariable.host_uuid, src=('host',), dst=('arbiter',)
[DEBUG] [2020-10-29 08:26:24,433] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=HomoLRTransferVariable.is_converge, src=('arbiter',), dst=('guest', 'host')
[DEBUG] [2020-10-29 08:26:24,433] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=HomoLRTransferVariable.paillier_pubkey, src=('arbiter',), dst=('host',)
[DEBUG] [2020-10-29 08:26:24,433] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=HomoLRTransferVariable.predict_result, src=('arbiter',), dst=('host',)
[DEBUG] [2020-10-29 08:26:24,433] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=HomoLRTransferVariable.predict_wx, src=('host',), dst=('arbiter',)
[DEBUG] [2020-10-29 08:26:24,433] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=HomoLRTransferVariable.re_encrypt_times, src=('host',), dst=('arbiter',)
[DEBUG] [2020-10-29 08:26:24,433] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=HomoLRTransferVariable.re_encrypted_model, src=('arbiter',), dst=('host',)
[DEBUG] [2020-10-29 08:26:24,433] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=HomoLRTransferVariable.to_encrypt_model, src=('host',), dst=('arbiter',)
[DEBUG] [2020-10-29 08:26:24,434] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=HomoLRTransferVariable.use_encrypt, src=('host',), dst=('arbiter',)
[DEBUG] [2020-10-29 08:26:24,434] [2815:140414991583040] - base_transfer_variable.py[line:63]: create variable with name=HomoLRTransferVariable.uuid_conflict_flag, src=('arbiter',), dst=('guest', 'host')
[INFO] [2020-10-29 08:26:24,434] [2815:140414991583040] - random_padding_cipher.py[line:41]: synchronizing uuid
[DEBUG] [2020-10-29 08:26:24,440] [2815:140414991583040] - federation_standalone.py[line:90]: [REMOTE] Sent 2020102908260459230210_homo_lr_0-LegacyAggregatorTransVar.RandomPaddingCipherTransVar.UUIDTransVar.uuid-default-arbiter-10000-guest-10000
[DEBUG] [2020-10-29 08:26:24,444] [2815:140414991583040] - federation_standalone.py[line:90]: [REMOTE] Sent 2020102908260459230210_homo_lr_0-LegacyAggregatorTransVar.RandomPaddingCipherTransVar.UUIDTransVar.uuid-default-arbiter-10000-host-10000
[INFO] [2020-10-29 08:26:24,444] [2815:140414991583040] - random_padding_cipher.py[line:44]: Diffie-Hellman keys exchanging
[DEBUG] [2020-10-29 08:26:24,448] [2815:140414991583040] - federation_standalone.py[line:90]: [REMOTE] Sent 2020102908260459230210_homo_lr_0-LegacyAggregatorTransVar.RandomPaddingCipherTransVar.DHTransVar.pubkey-default-arbiter-10000-guest-10000
[DEBUG] [2020-10-29 08:26:24,452] [2815:140414991583040] - federation_standalone.py[line:90]: [REMOTE] Sent 2020102908260459230210_homo_lr_0-LegacyAggregatorTransVar.RandomPaddingCipherTransVar.DHTransVar.pubkey-default-arbiter-10000-host-10000
[DEBUG] [2020-10-29 08:26:24,452] [2815:140414991583040] - federation_standalone.py[line:105]: [GET] Party(role=arbiter, party_id=10000) getting LegacyAggregatorTransVar.RandomPaddingCipherTransVar.DHTransVar.p_power_r.default from [Party(role=guest, party_id=10000), Party(role=host, party_id=10000)]
[DEBUG] [2020-10-29 08:26:24,554] [2815:140414991583040] - federation_standalone.py[line:40]: [GET] Got 2020102908260459230210_homo_lr_0-LegacyAggregatorTransVar.RandomPaddingCipherTransVar.DHTransVar.p_power_r-default-guest-10000-arbiter-10000 type Object
[DEBUG] [2020-10-29 08:26:24,655] [2815:140414991583040] - federation_standalone.py[line:40]: [GET] Got 2020102908260459230210_homo_lr_0-LegacyAggregatorTransVar.RandomPaddingCipherTransVar.DHTransVar.p_power_r-default-host-10000-arbiter-10000 type Object
[DEBUG] [2020-10-29 08:26:24,656] [2815:140414991583040] - federation_standalone.py[line:117]: [GET] Party(role=arbiter, party_id=10000) getting 2020102908260459230210_homo_lr_0-LegacyAggregatorTransVar.RandomPaddingCipherTransVar.DHTransVar.p_power_r-default-guest-10000-arbiter-10000 from [Party(role=guest, party_id=10000), Party(role=host, party_id=10000)]
[DEBUG] [2020-10-29 08:26:24,657] [2815:140414991583040] - federation_standalone.py[line:117]: [GET] Party(role=arbiter, party_id=10000) getting 2020102908260459230210_homo_lr_0-LegacyAggregatorTransVar.RandomPaddingCipherTransVar.DHTransVar.p_power_r-default-host-10000-arbiter-10000 from [Party(role=guest, party_id=10000), Party(role=host, party_id=10000)]
[DEBUG] [2020-10-29 08:26:24,661] [2815:140414991583040] - federation_standalone.py[line:90]: [REMOTE] Sent 2020102908260459230210_homo_lr_0-LegacyAggregatorTransVar.RandomPaddingCipherTransVar.DHTransVar.p_power_r_bc-default-arbiter-10000-guest-10000
[DEBUG] [2020-10-29 08:26:24,664] [2815:140414991583040] - federation_standalone.py[line:90]: [REMOTE] Sent 2020102908260459230210_homo_lr_0-LegacyAggregatorTransVar.RandomPaddingCipherTransVar.DHTransVar.p_power_r_bc-default-arbiter-10000-host-10000
[DEBUG] [2020-10-29 08:26:24,664] [2815:140414991583040] - optimizer.py[line:273]: in optimizer_factory, optimizer_type: sgd, learning_rate: 0.15, alpha: 0.01, penalty: L2,decay: 1, decay_sqrt: True
[DEBUG] [2020-10-29 08:26:24,664] [2815:140414991583040] - component_properties.py[line:118]: has_train_data: False, has_eval_data: True, has_normal_data: False
[DEBUG] [2020-10-29 08:26:24,665] [2815:140414991583040] - base_logistic_regression.py[line:97]: Start Loading model
